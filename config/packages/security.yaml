security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        #la valeur 'auto' signifie que symfony choisi l'algorythm le plus sûr disponible à ce jour, aujourd'hui c'est Bcrypt
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\AppUserAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                target: app_login

            #remember_me:
                #secret: '%kernel.secret%'
                #lifetime: 604800
                #path: /
                #always_remember_me: true



            # configuration du nombre d'échecs de connexion toléré
            login_throttling:
                max_attempts: 3          # per minute ...
                interval: '2 minutes' # ... or in a custom period


                # by default, the feature is enabled by checking a checkbox in the
                # login form, uncomment the following line to always enable it.
                #always_remember_me: true

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:

    # Autoriser l'accès à la page de connexion
    #- { path: ^/connexion.html, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    # Le rôle ADMIN est nécessaire pour accéder à la route administration
        #- { path: ^/administration, roles: ROLE_ADMIN }
    # Le rôle DOC est nécessaire pour accéder à la route /Doctor
    # - { path: ^/Doctor/mon_compte, roles: ROLE_DOC }
    # Le rôle USER est nécessaire pour accéder à la route /Patient
    # - { path: ^/Patient/mon_compte, roles: ROLE_USER }
    # Protéger la page d'accueil
        #- { path: ^/, roles: ROLE_USER }


when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon